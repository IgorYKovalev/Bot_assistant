import os
import telebot
import sqlite3
from pathlib import Path
from dotenv import load_dotenv
import gtts
import pdfplumber
from rembg import remove
import speech_recognition
from pydub import AudioSegment
from PIL import Image
from telebot.types import ReplyKeyboardMarkup, KeyboardButton


load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')
bot = telebot.TeleBot(BOT_TOKEN)


def transform_image(filename):
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    # –°—á–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é Image.open
    source_image = Image.open(filename)
    # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä –≤ —á/–± —Ñ–æ—Ç–æ: ImageFilter.EDGE_ENHANCE
    # enhanced_image = source_image.filter(ImageFilter.EDGE_ENHANCE)

    enhanced_image = remove(source_image, bgcolor=(255, 255, 255, 255))

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º RGBA –≤ RGB –∏–ª–∏ L –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ JPEG
    enhanced_image = enhanced_image.convert('RGB')
    # width = enhanced_image.size[0]
    # height = enhanced_image.size[1]
    # enhanced_image = enhanced_image.resize((width // 2, height // 2))
    # –°–æ—Ö—Ä–∞–Ω–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    enhanced_image.save(filename)

    return filename

# –¢–µ–ª–µ–≥—Ä–∞–º –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ 5 –≤–µ—Ä—Å–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ - –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –≤ —Å–ø–∏—Å–∫–µ,
# –ø–æ—ç—Ç–æ–º—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º—ã –±–µ—Ä–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ –æ–±—ä–µ–∫—Ç–∞ message.photo[-1]


# ‚Üì‚Üì‚Üì –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
@bot.message_handler(content_types=['photo'])
def resend_photo(message):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    file_id = message.photo[-1].file_id
    filename = download_file(bot, file_id)
    # –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    transform_image(filename)
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ open, 'rb' = read bytes
    image = open(filename, 'rb')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    bot.send_photo(message.chat.id, image)
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
    image.close()

    # –£–¥–∞–ª—è–µ—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if os.path.exists(filename):
        os.remove(filename)


def pdf_to_mp3(filename, language='ru'):
    """–§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ pdf –≤ mp3"""
    with pdfplumber.PDF(open(file=filename, mode='rb')) as pdf:
        pages = [page.extract_text() for page in pdf.pages]

    text = ''.join(pages)
    text = text.replace('\n', ' ')
    my_audio = gtts.gTTS(text=text, lang=language, slow=False)
    my_audio.save('file.mp3')
    return 'file.mp3'


# ‚Üì‚Üì‚Üì –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ñ–∞–π–ª
@bot.message_handler(content_types=['document'])
def converting(message):
    """–§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è mp3 –≤ –æ—Ç–≤–µ—Ç –Ω–∞ pdf"""
    filename = download_file(bot, message.document.file_id)

    if Path(filename).is_file() and Path(filename).suffix == '.pdf':
        # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ pdf_to_mp3
        mp3 = pdf_to_mp3(filename, language='ru')

        audio = open(mp3, 'rb')
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –æ—Ç–≤–µ—Ç mp3
        bot.send_audio(message.chat.id, audio)
        audio.close()

        # –£–¥–∞–ª—è–µ—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
        if os.path.exists(mp3):
            os.remove(mp3)

    else:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞, \n–ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ üòú')


def oga2wav(filename):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–æ–≤"""
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞: 'sample.oga' -> 'sample.wav'
    new_filename = filename.replace('.oga', '.wav')
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å –¥–∏—Å–∫–∞ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ AudioSegment.from_file()
    audio = AudioSegment.from_file(filename)
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ –Ω–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    audio.export(new_filename, format='wav')

    return new_filename


def recognize_speech(oga_filename):
    """–ü–µ—Ä–µ–≤–æ–¥ –≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—Å—Ç + —É–¥–∞–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    wav_filename = oga2wav(oga_filename)
    recognizer = speech_recognition.Recognizer()

    with speech_recognition.WavFile(wav_filename) as source:
        wav_audio = recognizer.record(source)

    text = recognizer.recognize_google(wav_audio, language='ru')

    if os.path.exists(oga_filename):
        os.remove(oga_filename)
    if os.path.exists(wav_filename):
        os.remove(wav_filename)

    return text


# ‚Üì‚Üì‚Üì –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å
@bot.message_handler(content_types=['voice'])
def transcript(message):
    """–§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è —Ç–µ–∫—Å—Ç –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ"""
    # id —Ñ–∞–π–ª–∞ - –≤ message.voice.file_id
    filename = download_file(bot, message.voice.file_id)
    # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º –∑–∞–ø–∏—Å—å —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ recognize_speech
    text = recognize_speech(filename)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –æ—Ç–≤–µ—Ç —Ç–µ–∫—Å—Ç
    bot.send_message(message.chat.id, text)


def download_file(bot, file_id):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–ª–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ bot.get_file
    file_info = bot.get_file(file_id)
    # –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ bot.download_file
    downloaded_file = bot.download_file(file_info.file_path)
    # –ò–º—è —Ñ–∞–π–ª–∞ –¥–µ–ª–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–º: id —Ñ–∞–π–ª–∞ + file_info.file_path
    filename = file_id + file_info.file_path
    # file_info.file_path –∏–º–µ–µ—Ç –≤–∏–¥ voice/file_123.oga,
    # —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –∏–∑-–∑–∞ –∫–æ—Å–æ–π —á–µ—Ä—Ç—ã, –∑–∞–º–µ–Ω–∏–º –µ–µ –Ω–∞ _
    filename = filename.replace('/', '_')

    with open(filename, 'wb') as f:
        f.write(downloaded_file)
    return filename


@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id, "–í–æ—Ç, —á—Ç–æ —è —É–º–µ—é:\n"
                                      "\n"
                                      "1. –£–¥–∞–ª—è—Ç—å —Ñ–æ–Ω c –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∑–∞–≥—Ä—É–∑–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.\n"
                                      "2. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å –≤ —Ç–µ–∫—Å—Ç, –∑–∞–ø–∏—à–∏ –≥–æ–ª–æ—Å –Ω–∞ –¥–∏–∫—Ç–æ—Ñ–æ–Ω.\n"
                                      "3. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å PDF –≤ mp3, –∑–∞–≥—Ä—É–∑–∏ pdf —Ñ–∞–π–ª –∏ –Ω–∞–∂–º–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.\n"
                                      "\n–ï—Å–ª–∏ —è –Ω–µ —Ä–∞–±–æ—Ç–∞—é üòû, —Å–≤—è–∂–∏—Å—å —Å –º–æ–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º üôà- @IgorKovalev")


def help_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –±–æ—Ç–∞
    :return: keyboard
    :rtype: ReplyKeyboardMarkup
    """

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    help_button = KeyboardButton('/help')

    keyboard.row(help_button)

    return keyboard


@bot.message_handler(commands=['start'])
def say_hi(message):

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î, —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª. –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    connect = sqlite3.connect('user.db')
    cursor = connect.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS users(
        id INTEGER,
        username TEXT,
        first_name TEXT,
        last_name TEXT
    )""")
    connect.commit()
    chat = message.chat
    cursor.execute('SELECT id FROM users WHERE id == ?', (chat.id,))
    if cursor.fetchone() is None:
        cursor.execute("INSERT INTO users VALUES(?,?,?,?);", (chat.id, chat.username, chat.first_name, chat.last_name))
        connect.commit()

    # –§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è "–ü—Ä–∏–≤–µ—Ç" –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    if message.from_user.last_name == None:
        bot.send_message(
            message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n' 
                             f'–Ø –±–æ—Ç, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ —è —É–º–µ—é, –Ω–∞–∂–º–∏—Ç–µ /help', reply_markup=help_keyboard())
    else:
        bot.send_message(
            message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name}!\n'
                             f'–Ø –±–æ—Ç, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ —è —É–º–µ—é, –Ω–∞–∂–º–∏—Ç–µ /help', reply_markup=help_keyboard())


bot.polling()
